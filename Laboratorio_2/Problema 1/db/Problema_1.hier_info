|top_module
A[0] => A[0].IN2
A[1] => A[1].IN2
A[2] => A[2].IN2
A[3] => A[3].IN2
B[0] => B[0].IN2
B[1] => B[1].IN2
B[2] => B[2].IN2
B[3] => B[3].IN2
dividend[0] => dividend[0].IN1
dividend[1] => dividend[1].IN1
dividend[2] => dividend[2].IN1
dividend[3] => dividend[3].IN1
divisor[0] => divisor[0].IN1
divisor[1] => divisor[1].IN1
divisor[2] => divisor[2].IN1
divisor[3] => divisor[3].IN1
Cin => Cin.IN1
clk => clk.IN1
rst => rst.IN1
D[0] << restador_nbit:restador_inst.D
D[1] << restador_nbit:restador_inst.D
D[2] << restador_nbit:restador_inst.D
D[3] << restador_nbit:restador_inst.D
Cout << restador_nbit:restador_inst.Cout
quotient[0] << divisor_nbit:divisor_inst.quotient
quotient[1] << divisor_nbit:divisor_inst.quotient
quotient[2] << divisor_nbit:divisor_inst.quotient
quotient[3] << divisor_nbit:divisor_inst.quotient
remainder[0] << divisor_nbit:divisor_inst.remainder
remainder[1] << divisor_nbit:divisor_inst.remainder
remainder[2] << divisor_nbit:divisor_inst.remainder
remainder[3] << divisor_nbit:divisor_inst.remainder
multiplication[0] << multiplier:mult_inst.result
multiplication[1] << multiplier:mult_inst.result
multiplication[2] << multiplier:mult_inst.result
multiplication[3] << multiplier:mult_inst.result
overflow << multiplier:mult_inst.overflow


|top_module|restador_nbit:restador_inst
A[0] => Add1.IN4
A[1] => Add1.IN3
A[2] => Add1.IN2
A[3] => Add1.IN1
B[0] => Add0.IN8
B[1] => Add0.IN7
B[2] => Add0.IN6
B[3] => Add0.IN5
Cin => Add2.IN10
D[0] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
D[1] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
D[2] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
D[3] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Add2.DB_MAX_OUTPUT_PORT_TYPE


|top_module|divisor_nbit:divisor_inst
dividend[0] => Div0.IN3
dividend[0] => Mod0.IN3
dividend[1] => Div0.IN2
dividend[1] => Mod0.IN2
dividend[2] => Div0.IN1
dividend[2] => Mod0.IN1
dividend[3] => Div0.IN0
dividend[3] => Mod0.IN0
divisor[0] => Div0.IN7
divisor[0] => Mod0.IN7
divisor[0] => Equal0.IN31
divisor[1] => Div0.IN6
divisor[1] => Mod0.IN6
divisor[1] => Equal0.IN30
divisor[2] => Div0.IN5
divisor[2] => Mod0.IN5
divisor[2] => Equal0.IN29
divisor[3] => Div0.IN4
divisor[3] => Mod0.IN4
divisor[3] => Equal0.IN28
quotient[0] <= quotient.DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient.DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient.DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient.DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= remainder.DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= remainder.DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= remainder.DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= remainder.DB_MAX_OUTPUT_PORT_TYPE


|top_module|multiplier:mult_inst
clk => overflow~reg0.CLK
clk => S[8].CLK
clk => result[0]~reg0.CLK
clk => result[1]~reg0.CLK
clk => result[2]~reg0.CLK
clk => result[3]~reg0.CLK
rst => overflow~reg0.ACLR
rst => S[8].ACLR
rst => result[0]~reg0.ACLR
rst => result[1]~reg0.ACLR
rst => result[2]~reg0.ACLR
rst => result[3]~reg0.ACLR
A[0] => S.DATAB
A[0] => Add0.IN8
A[0] => Add1.IN8
A[0] => Add2.IN8
A[1] => S.DATAB
A[1] => Add0.IN7
A[1] => Add1.IN7
A[1] => Add2.IN7
A[2] => S.DATAB
A[2] => Add0.IN6
A[2] => Add1.IN6
A[2] => Add2.IN6
A[3] => S.DATAB
A[3] => Add0.IN5
A[3] => Add1.IN5
A[3] => Add2.IN5
B[0] => S.OUTPUTSELECT
B[0] => S.OUTPUTSELECT
B[0] => S.OUTPUTSELECT
B[0] => S.OUTPUTSELECT
B[0] => S.OUTPUTSELECT
B[1] => S.OUTPUTSELECT
B[1] => S.OUTPUTSELECT
B[1] => S.OUTPUTSELECT
B[1] => S.OUTPUTSELECT
B[1] => S.OUTPUTSELECT
B[2] => S.OUTPUTSELECT
B[2] => S.OUTPUTSELECT
B[2] => S.OUTPUTSELECT
B[2] => S.OUTPUTSELECT
B[2] => S.OUTPUTSELECT
B[3] => S.OUTPUTSELECT
B[3] => S.OUTPUTSELECT
B[3] => S.OUTPUTSELECT
B[3] => S.OUTPUTSELECT
B[3] => S.OUTPUTSELECT
result[0] <= result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE


